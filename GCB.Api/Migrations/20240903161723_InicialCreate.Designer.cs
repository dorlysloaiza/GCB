// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GCB.Api.Migrations
{
    [DbContext(typeof(GCBContext))]
    [Migration("20240903161723_InicialCreate")]
    partial class InicialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadorPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ContenidoArchivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("IdTransaccion")
                        .HasColumnType("int");

                    b.Property<Guid?>("TransactionId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("FechaActualizacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ActualziadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId1");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("RegistroAuditoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjetoActual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Fecha")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("IdTransaccion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjetoOriginal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegistrosAuditoria");
                });

            modelBuilder.Entity("CuentaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadorPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BalanceActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaFechaConciliacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaActualizacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ActualziadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CuentaBancaria");
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadorPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Tipo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FechaActualizacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ActualziadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Transaccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<Guid>("IdCuentaBancaria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCategoria ")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadorPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FechaActualizacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ActualziadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCuentaBancaria");

                    b.HasIndex("IdCategoria ");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Attachment", b =>
                {
                    b.HasOne("Transaccion", null)
                        .WithMany("Adjuntos")
                        .HasForeignKey("TransactionId1");
                });

            modelBuilder.Entity("Transaccion", b =>
                {
                    b.HasOne("CuentaBancaria", "CuentaBancaria")
                        .WithMany("Transacciones")
                        .HasForeignKey("IdCuentaBancaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaBancaria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CuentaBancaria", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("Transaccion", b =>
                {
                    b.Navigation("Adjuntos");
                });
#pragma warning restore 612, 618
        }
    }
}
